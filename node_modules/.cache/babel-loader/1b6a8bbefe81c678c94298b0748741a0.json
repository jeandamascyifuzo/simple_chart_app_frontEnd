{"ast":null,"code":"var _jsxFileName = \"/Users/andelarwanda/Desktop/Andela/trash/socketio/client/src/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = _ref => {\n  _s();\n\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"recieve_message\", data => {\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Live chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-body\",\n      children: messageList.map(messageContent => {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: messageContent.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"message....\",\n        onChange: e => {\n          setCurrentMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"gDKz+24cg75HOdfXSFFmVy0ndt0=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","socket","username","room","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","list","on","data","map","messageContent","e","target","value"],"sources":["/Users/andelarwanda/Desktop/Andela/trash/socketio/client/src/Chart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst Chart = ({socket,username,room}) => {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([]);\n\n    const sendMessage = async () => {\n        if (currentMessage !== \"\") {\n          const messageData = {\n            room: room,\n            author: username,\n            message: currentMessage,\n            time:\n              new Date(Date.now()).getHours() +\n              \":\" +\n              new Date(Date.now()).getMinutes(),\n          };\n    \n          await socket.emit(\"send_message\", messageData);\n          setMessageList((list)=>[...list, messageData]);\n        }\n    };\n\n    useEffect(()=>{\n        socket.on(\"recieve_message\", (data)=>{\n            setMessageList((list)=>[...list, data]);\n        })\n    },[socket]);\n\n  return (\n    <div>\n      <div className=\"chart-header\">\n          <p>Live chart</p>\n      </div>\n      <div className=\"chart-body\">\n          {messageList.map((messageContent)=>{\n              return <h2>{messageContent.message}</h2>\n          })}\n      </div>\n      <div className=\"chart-footer\">\n          <input \n          type=\"text\" \n          placeholder=\"message....\" \n          onChange={(e)=>{setCurrentMessage(e.target.value);\n        }}\n        />\n         <button onClick={sendMessage}>&#9658;</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Chart\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,KAAK,GAAG,QAA4B;EAAA;;EAAA,IAA3B;IAACC,MAAD;IAAQC,QAAR;IAAiBC;EAAjB,CAA2B;EACtC,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMS,WAAW,GAAG,YAAY;IAC5B,IAAIJ,cAAc,KAAK,EAAvB,EAA2B;MACzB,MAAMK,WAAW,GAAG;QAClBN,IAAI,EAAEA,IADY;QAElBO,MAAM,EAAER,QAFU;QAGlBS,OAAO,EAAEP,cAHS;QAIlBQ,IAAI,EACF,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,KACA,GADA,GAEA,IAAIF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,UAArB;MAPgB,CAApB;MAUA,MAAMf,MAAM,CAACgB,IAAP,CAAY,cAAZ,EAA4BR,WAA5B,CAAN;MACAF,cAAc,CAAEW,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAAUT,WAAV,CAAT,CAAd;IACD;EACJ,CAfD;;EAiBAX,SAAS,CAAC,MAAI;IACVG,MAAM,CAACkB,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAQ;MACjCb,cAAc,CAAEW,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAAUE,IAAV,CAAT,CAAd;IACH,CAFD;EAGH,CAJQ,EAIP,CAACnB,MAAD,CAJO,CAAT;EAMF,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,YAAf;MAAA,UACKK,WAAW,CAACe,GAAZ,CAAiBC,cAAD,IAAkB;QAC/B,oBAAO;UAAA,UAAKA,cAAc,CAACX;QAApB;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA;IADL;MAAA;MAAA;MAAA;IAAA,QAJF,eASE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACI;QACA,IAAI,EAAC,MADL;QAEA,WAAW,EAAC,aAFZ;QAGA,QAAQ,EAAGY,CAAD,IAAK;UAAClB,iBAAiB,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;QACjB;MAJC;QAAA;QAAA;QAAA;MAAA,QADJ,eAOG;QAAQ,OAAO,EAAEjB,WAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPH;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAhDD;;GAAMR,K;;KAAAA,K;AAkDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}